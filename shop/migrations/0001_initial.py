# Generated by Django 2.2 on 2020-05-02 16:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('street', models.CharField(blank=True, max_length=240)),
                ('street2', models.CharField(blank=True, max_length=240)),
                ('city', models.CharField(blank=True, max_length=120)),
                ('state', models.CharField(blank=True, max_length=120)),
                ('country', models.CharField(blank=True, max_length=120)),
                ('email', models.CharField(blank=True, max_length=240)),
                ('mobile', models.CharField(blank=True, max_length=32)),
                ('type', models.CharField(choices=[('contact', 'Contact'), ('delivery', 'Shipping Address'), ('invoice', 'Invoice Address')], default='contact', max_length=32)),
            ],
            options={
                'verbose_name': 'Contanct',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('confirm_date', models.DateTimeField()),
                ('commitment_date', models.DateTimeField()),
                ('state', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('sale', 'Sale'), ('done', 'Done')], max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='OrderLines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=264)),
                ('unit_price', models.FloatField(default=0.0, verbose_name='Price')),
                ('product_qty', models.FloatField(default=0.0, verbose_name='Qunatity')),
                ('untaxed_amount', models.FloatField(default=0.0, verbose_name='Untaxed Amount')),
                ('tax_amount', models.FloatField(default=0.0, verbose_name='Tax Amount')),
                ('sub_total', models.FloatField(default=0.0, verbose_name='Sub Total')),
                ('total', models.FloatField(default=0.0, verbose_name='Total')),
                ('data_added', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('sale_ok', models.BooleanField(default=True, verbose_name='Can be Sold')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('price', models.FloatField(default=1.0, verbose_name='Price')),
                ('sku', models.CharField(max_length=64, verbose_name='SKU')),
                ('image', models.ImageField(blank=True, upload_to='product_template/', verbose_name='Image')),
                ('description', models.TextField(blank=True, verbose_name='Product Description')),
                ('type', models.CharField(choices=[('product', 'Storable'), ('consu', 'Consumable'), ('service', 'Service')], default='consu', help_text='A storable product is a  product for which you manage stock. The Inventory app has to be installed.\nA consumable product is a product for which stock is not managed.\nA service is a non-material product you provide.', max_length=32, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Product',
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='shop_produc_name_a2070e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('sku',)},
        ),
        migrations.AddField(
            model_name='orderlines',
            name='order_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Order'),
        ),
        migrations.AddField(
            model_name='orderlines',
            name='product_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.Product'),
        ),
        migrations.AddField(
            model_name='order',
            name='customer_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_order_set', to='shop.Customer'),
        ),
        migrations.AddField(
            model_name='order',
            name='invoice_address_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_address_order_set', to='shop.Customer'),
        ),
        migrations.AddField(
            model_name='order',
            name='shipping_address_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipping_address_order_set', to='shop.Customer'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='orderlines',
            index=models.Index(fields=['order_id'], name='shop_orderl_order_i_574153_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['name', 'customer_id'], name='shop_order_name_55e30a_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['user', 'type'], name='shop_custom_user_id_6ce3a8_idx'),
        ),
    ]
